<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.green.vrink.review.repository.interfaces.ReviewRepository">
    <delete id="deleteById">
        DELETE FROM review
        WHERE review_id = #{reviewId}
    </delete>
    <select id="reviewSave" resultType="java.lang.Integer">

        INSERT INTO review(editor_id, user_id, content, count) VALUE (#{editorId},#{userId},#{content},#{count})

    </select>
    <select id="reviewDuplicCheck" resultType="java.lang.Integer">
        SELECT 1 FROM review
        WHERE editor_id = #{editorId} AND user_id = #{userId}
    </select>
    <select id="findByIdAll" resultType="com.green.vrink.review.dto.ReviewDTO">
        SELECT r.review_id,
               r.editor_id,
               r.user_id,
               r.content,
               r.count,
               CASE
                   WHEN count = 2 THEN '★'
                   WHEN count = 4 THEN '★★'
                   WHEN count = 6 THEN '★★★'
                   WHEN count = 8 THEN '★★★★'
                   WHEN count = 10 THEN '★★★★★'
                   ELSE ''
                   END AS star,
                u.nickname,
                r.created_at
        FROM review r
        LEFT JOIN user u ON r.user_id = u.user_id
        WHERE editor_id = #{id}
    </select>
    <select id="findUserIdByReviewId" resultType="java.lang.Integer">
        SELECT user_id FROM review
        WHERE review_id = #{reviewId}

    </select>

    <select id="findByAll" resultType="com.green.vrink.review.dto.ReviewCountDTO">
        SELECT r.editor_id,
               avg(r.count) count,
        CASE
                   WHEN round(avg(r.count)) = 1 THEN '☆'
                   WHEN round(avg(r.count)) = 2 THEN '★'
                   WHEN round(avg(r.count)) = 3 THEN '★☆'
                   WHEN round(avg(r.count)) = 4 THEN '★★'
                   WHEN round(avg(r.count)) = 5 THEN '★★☆'
                   WHEN round(avg(r.count)) = 6 THEN '★★★'
                   WHEN round(avg(r.count)) = 7 THEN '★★★☆'
                   WHEN round(avg(r.count)) = 8 THEN '★★★★'
                   WHEN round(avg(r.count)) = 9 THEN '★★★★☆'
                   WHEN round(avg(r.count)) = 10 THEN '★★★★★'
                   ELSE ''
        END AS star,
        ed.thumbnail,
        ed.introduce,
        u.nickname
        FROM review r
        LEFT JOIN editor_detail ed ON r.editor_id = ed.editor_id
        LEFT JOIN user u ON u.user_id = ed.user_id
        group by ed.editor_id
        order by count desc
        LIMIT 4;
    </select>
</mapper>