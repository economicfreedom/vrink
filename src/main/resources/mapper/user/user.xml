<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.green.vrink.user.repository.interfaces.UserRepository">


    <select id="requestApproval" resultType="java.lang.Integer">
        insert into apply(user_id, name, number)
            value (#{userId},#{accountName},#{accountNumber})
    </select>

    <insert id="signUp">
    	INSERT INTO user
		(email, password, name, nickname, phone, created_at)
		VALUES (#{email}, #{password}, #{name}, #{nickname}, #{phone}, now())
    </insert>

    <select id="checkEmail" resultType="String">
    	SELECT email FROM user WHERE email = #{email};
    </select>
    <select id="findUserNicknameById" resultType="java.lang.String">
        SELECT nickname
        FROM user
        WHERE user_id = #{userId}

    </select>

    <insert id="editorWrite">
    	INSERT INTO editor_detail(user_id, profile_image, introduce, image, content, vrm)
    	VALUES (#{userId}, #{profileImage}, #{introduce}, #{image}, #{content}, #{vrm})
    </insert>

    <select id="findByEditorId" resultType="com.green.vrink.user.dto.EditorDTO">
        select ed.editor_id, ed.user_id, ed.profile_image, ed.introduce, ed.image, ed.content, ed.vrm, u.nickname
		from editor_detail ed
		left join user u
		on u.user_id = ed.user_id
		where ed.editor_id = #{editorId};
    </select>

    <select id="findVrmById" resultType="java.lang.String">
        SELECT vrm FROM editor_detail
        WHERE editor_id = #{editorId}
    </select>
      <select id="findEditorList" resultType="com.green.vrink.user.dto.EditorDTO">
          SELECT e.editor_id,
                 profile_image,
                 introduce,
                 nickname,
                 COALESCE(ROUND(avg(r.count / 2), 1), 0.0) as count,
                 e.image
          FROM editor_detail e
              LEFT JOIN user u
          ON e.user_id = u.user_id
              LEFT JOIN review r ON e.editor_id = r.editor_id
          GROUP BY e.editor_id, profile_image, introduce, nickname
          LIMIT #{offset},#{countPerPage}

      </select>
    <select id="getTotal" resultType="java.lang.Integer">
        SELECT count(editor_id)
        FROM editor_detail
    </select>


    <update id="updateByEditorId">
        UPDATE editor_detail SET
        profile_image=#{profileImage}, introduce=#{introduce}, image=#{image}, content=#{content}, vrm=#{vrm}
        WHERE editor_id = #{editorId}
    </update>

    <select id="findByEmail" resultType="com.green.vrink.user.repository.model.User">
    	SELECT *
		FROM user AS u 
		WHERE u.email = #{email}
    </select>	
    
    <update id="updateNickname">
    	UPDATE user 
    	SET user.nickname = #{nickname} 
    	WHERE user_id = #{userId}
    </update>

    <update id="updatePassword">
    	UPDATE user 
    	SET user.password = #{password} 
    	WHERE user_id = #{userId}
    </update>
    
    <select id="findByUserId" resultType="com.green.vrink.user.repository.model.User">
    	SELECT *
		FROM user AS u 
		WHERE user_id = #{userId}
    </select>

    <select id="findEditorIdByUserId" resultType="java.lang.Integer">
        SELECT editor_detail.editor_id
        FROM editor_detail
        WHERE user_id = #{userId};
    </select>

    <update id="deleteByUserId">
        UPDATE user
        SET enabled_check = 1
        WHERE user_id = #{userId};
    </update>
    <update id="updatePoint">
        UPDATE user
        SET user.point = #{point}
        WHERE user_id = #{userId}
    </update>


    <insert id="insertPrice">
    	INSERT INTO test_price (editor_id, options, price)
    	VALUES (#{editorId}, #{option}, #{price})
    </insert>

    <insert id="calculatePoint">
        INSERT INTO calculator (editor_id, cal_price, created_at) VALUES (#{userId}, #{point}, now());
    </insert>

</mapper>